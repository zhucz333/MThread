CMAKE_MINIMUM_REQUIRED (VERSION 3.5)

PROJECT (MThread CXX)

SET(CMAKE_CXX_STANDARD 11)
SET(CMAKE_CXX_STANDARD_REQUIRED ON)
SET(CMAKE_CXX_EXTENSIONS OFF)

SET(INC_PATH ${PROJECT_SOURCE_DIR}/../../include)
SET(LIB_PATH ${PROJECT_SOURCE_DIR}/../../lib)
SET(BIN_PATH ${PROJECT_SOURCE_DIR}/../../bin)			
SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_DEBUG ${LIB_PATH})
SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY_DEBUG ${LIB_PATH})
SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY_DEBUG ${BIN_PATH})
SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_RELEASE ${LIB_PATH})
SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY_RELEASE ${LIB_PATH})
SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE ${BIN_PATH})

IF(USE_32BITS)				
	MESSAGE(STATUS "Using 32bits")
	SET(ARCH "32")
ELSE()	
	MESSAGE(STATUS "Using 64bits")
	SET(ARCH "64")
ENDIF()

SET(TARGETBIN MThread)
FILE(GLOB_RECURSE MTHREAD_HEADERS *.h)
AUX_SOURCE_DIRECTORY(. MTHREAD_SRCS)

ADD_LIBRARY(${TARGETBIN} STATIC ${MTHREAD_HEADERS} ${MTHREAD_SRCS})

SET_TARGET_PROPERTIES(${TARGETBIN} PROPERTIES OUTPUT_NAME "${TARGETBIN}${ARCH}$<$<CONFIG:Debug>:D>")

IF (CMAKE_BUILD_TYPE STREQUAL Debug)
	ADD_DEFINITIONS(-DDEBUG)
ENDIF()

IF (CMAKE_SYSTEM_NAME MATCHES "Linux")
	MESSAGE(STATUS "Current platform: Linux ")
	
	SET(CMAKE_CXX_FLAGS_DEBUG "$ENV{CXXFLAGS} -g -O0")
	SET(CMAKE_CXX_FLAGS_RELEASE "$ENV{CXXFLAGS} -O3")	
	SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fPIC -Wall -pthread")
	
	IF(USE_32BITS)				
		MESSAGE(STATUS "Using 32bits")
		SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -m32")		
	ELSE()	
		MESSAGE(STATUS "Using 64bits")
		SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -m64")
	ENDIF()

ELSEIF (CMAKE_SYSTEM_NAME MATCHES "Windows")
	MESSAGE(STATUS "Current platform: Windows")
	
	SET(CMAKE_CONFIGURATION_TYPES Debug Release)
	ADD_DEFINITIONS(-D_CRT_SECURE_NO_WARNINGS)
ENDIF()

FILE(COPY  MThread.h Strand.h DESTINATION ${INC_PATH})

ADD_SUBDIRECTORY(test)
